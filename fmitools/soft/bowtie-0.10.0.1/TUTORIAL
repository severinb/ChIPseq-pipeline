Bowtie: an Ultrafast, Lightweight Short Read Aligner

Bowtie Getting Started Guide
============================

 Download and extract the appropriate Bowtie binary release from
 http://bowtie-bio.sf.net into a fresh directory. Change to that
 directory.

 Performing alignments
 ---------------------

 The Bowtie source and binary packages come with a pre-built index of
 the E. coli genome, and a set of 1,000 35-bp reads simulated from that
 genome. To use Bowtie to align those reads, issue the following
 command.  If you get an error message "command not found", try adding
 a "./" before the "bowtie".
 
    bowtie e_coli reads/e_coli_1000.fq

 The first argument to bowtie is the basename of the index for the
 genome to be searched. The second argument is the name of a FASTQ file
 containing the reads.

 Depending on your computer, the run might take a few seconds up to
 about a minute. You will see bowtie print many lines of output. Each
 line is an alignment for a read. The name of the aligned read appears
 in the leftmost column. The final line should say "Reported 698
 alignments to 1 output stream(s)" or something similar. 

 Next, issue this command:

    bowtie -t e_coli reads/e_coli_1000.fq e_coli.map

 This run calculates the same alignments as the previous run, but the
 alignments are written to e_coli.map (the final argument) rather than
 to the screen. Also, the -t option instructs Bowtie to print timing
 statistics, which will look something like this (times will obviously
 differ):

    Time loading forward index: 00:00:00
    Time loading mirror index: 00:00:00
    Seeded quality full-index search: 00:00:00
    Reported 698 alignments to 1 output stream(s)
    Time searching: 00:00:00
    Overall time: 00:00:00

 Installing a pre-built index
 ----------------------------

 Download the pre-built S. cerevisiae genome package from the Bowtie
 FTP site:

    ftp://ftp.cbcb.umd.edu/pub/data/bowtie_indexes/s_cerevisiae.ebwt.zip

 All pre-built indexes are packaged as .zip archives, and the S.
 cerevisiae archive is named s_cerevisiae.ebwt.zip. When it has
 finished downloading, extract the archive into the Bowtie 'indexes'
 subdirectory using your preferred unzip tool. The index is now
 installed.

 To test that the index is properly installed, issue this command from
 the Bowtie install directory:

    bowtie -c s_cerevisiae ATTGTAGTTCGAGTAAGTAATGTGGGTTTG

 This command searches the S. cerevisiae index with a single read. The
 -c argument instructs Bowtie to obtain read sequences directly from
 the command line rather than from a file. If the index is installed
 properly, this command should print a single alignment and then exit.

 If you would rather install pre-built indexes somewhere other than the
 'indexes' subdirectory of the Bowtie install directory, simply set the
 BOWTIE_INDEXES environment variable to point to your preferred
 directory and extract indexes there instead.

 Building a new index
 --------------------

 The pre-built E. coli index included with Bowtie is built from the
 sequence for strain 536, known to cause urinary tract infections. We
 will create a new index from the sequence of E. coli strain O157:H7, a
 strain known to cause food poisoning. Download the sequence file from:

    ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Escherichia_coli_O157H7/NC_002127.fna

 When the sequence file is finished downloading, move it to the Bowtie
 install directory and issue this command:

    bowtie-build NC_002127.fna e_coli_O157_H7

 The command should finish quickly, and print several lines of status
 messages. When the command has completed, note that the current
 directory contains four new files named e_coli_O157_H7.1.ebwt,
 e_coli_O157_H7.2.ebwt, e_coli_O157_H7.rev.1.ebwt, and
 e_coli_O157_H7.rev.2.ebwt. These files constitute the index. Move
 these files to the indexes subdirectory to install it.

 To test that the index is properly installed, issue this command:

    bowtie -c e_coli_O157_H7 GCGTGAGCTATGAGAAAGCGCCACGCTTCC

 If the index is installed properly, this command should print a single
 alignment and then exit.

 Finding variations with Maq
 ---------------------------

 Maq (http://maq.sf.net), by Heng Li at the Wellcome Trust Sanger
 Institute, is a collection of tools for aligning short reads and
 finding variations with respect to a reference sequence. The output
 produced by Bowtie can be converted to the same format as is output
 by Maq's short read aligner, allowing Bowtie users to leverage Maq's
 tools for finding variations.  Note that versions of Maq prior to
 0.7.0 restrict reads to 63 bases or less.  Maq versions 0.7.0 and
 later restrict reads to 127 bases or less.  Both are more restrictive
 than Bowtie, which allows reads of up to 1024 bases.

 Let's use Bowtie and Maq to find Single-Nucleotide Polymorphisms
 (SNPs) in a simulated read set included with Bowtie.  The simulated
 reads cover the first 10,000 bases of the included E. coli genome and
 contain 10 SNPs throughout. First, we run 'bowtie' to align the reads,
 being sure to provide a filename as the third argument so that
 alignments are saved to a file:

    bowtie e_coli reads/e_coli_10000snp.fq ec_snp.map 

 Next, convert the E. coli reference sequence into Maq's .bfa format.
 The sequence(s) converted must be the same as those used to build the
 Bowtie index that was aligned against. Use 'maq fasta2bfa' to perform
 the conversion:

    maq fasta2bfa genomes/NC_008253.fna genomes/NC_008253.bfa

 Now run 'bowtie-maqconvert' to convert the Bowtie alignment file to a
 Maq alignment file. 

    bowtie-maqconvert ec_snp.map ec_snp.maq_map genomes/NC_008253.bfa

 Note that the Maq file format changed starting with Maq version 0.7.0
 in order to accommodate reads of up to 127 base pairs in length.  To
 generate a Maq alignment file compatible with versions of Maq older
 than 0.7.0, run the same command as above but add the '-o' option
 after 'bowtie-maqconvert'.

 Maq's alignment file format is not human-readable, but you can use
 'maq mapview' to view its contents:

    maq mapview ec_snp.maq_map 

 To produce a consensus sequence from the alignments, use 'maq
 assemble'.  This will generate the consensus and store it in a .cns
 file (and print several lines of summary output):

    maq assemble ec_snp.cns genomes/NC_008253.bfa ec_snp.maq_map 

 The .cns file is not human-readable, but you can print the consensus
 sequence in FASTQ format using 'maq cns2fq':

    maq cns2fq ec_snp.cns

 Observing the output from 'maq cns2fq', you will notice that the
 consensus is all 'n's after the first 10,000 bases.  This is because
 reads were simulated only from the first 10,000 bases.

 To call SNPs in the consensus sequence, use 'maq cns2snp':

    maq cns2snp ec_snp.cns 

 For this sample data, maq should print records for 10 distinct SNPs,
 the first being at position 541 in the reference.

 See the Maq manual for details on how to use these and other Maq
 tools: http://maq.sourceforge.net/maq-man.shtml.
